services:
  # DB Service
  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: prolific
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - exceed-prolific-network

  # LLM Service
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/var/lib/ollama
      - ./ollama/entrypoint.sh:/entrypoints/entrypoint.sh:ro
    entrypoint: [ "/bin/sh", "/entrypoints/entrypoint.sh" ]
    environment:
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3.1:8b}
    healthcheck:
      test: [ "CMD", "sh", "-c", "ollama list | grep -q '${OLLAMA_MODEL:-llama3.1:8b}'" ]
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 60s
    networks:
      - exceed-prolific-network

  # FastAPI Backend Service
  backend:
    build:
      context:
        ./exceed-prolific-backend
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin}@db:5432/prolific
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - FRONTEND_URL=http://frontend:3000
    depends_on:
      ollama:
        condition: service_healthy
      db:
        condition: service_started
    networks:
      - exceed-prolific-network

  # NextJS Frontend Service
  frontend:
    build:
      context: ./exceed-prolific-frontend
      args:
        NEXT_PUBLIC_BACKEND_HOST: ''
    container_name: frontend
    restart: always
    environment:
      - NEXT_PUBLIC_BACKEND_HOST=
    depends_on:
      - backend
    networks:
      - exceed-prolific-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - exceed-prolific-network

networks:
  exceed-prolific-network:
    driver: bridge

volumes:
  db_data: { }
  ollama_data: { }
